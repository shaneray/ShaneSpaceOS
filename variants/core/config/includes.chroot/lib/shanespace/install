#!/bin/bash

set -e

########################################
# Script Variables
########################################
# get current script directory
SROOT="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shanespace script directories
SS_SRC_LIB="${SROOT}/root/lib/shanespace"
SS_LIB="/lib/shanespace"

SS_BYPASS_ELEVATE_PROMPT="${1:-no}"

########################################
# Source Scripts
########################################
# include ShaneSpace Bash (If installed, will already be referenced)
# shellcheck source=./root/lib/shanespace/lib/ssbash
source "${SS_SRC_LIB}/ssbash"
#debug_enable

########################################
# Functions
########################################
install_libraries()
{
	h2 "Installing ShaneSpace Libraries"
	# Remove existing files
	[ -d "${SS_LIB}" ] &&
	{
		h2 "Removing previous install."
		rm -rf "${SS_LIB}"
	}
	
	# Copy library files
	copy "${SS_SRC_LIB}" "/lib"
}

interactive_shell_integration()
{
	# System-wide bash.bashrc file for interactive bash(1) shells.
	local bashrc_file="/etc/bash.bashrc"
	h3 "Updating System-wide ${bashrc_file} file for interactive bash(1) shells."
	# Create symlink
	sslink "${SS_LIB}/ssbash" "/etc/bash.bashrc.d/ssbash.sh"
	
	if grep -q "/etc/bash.bashrc.d" "${bashrc_file}"
	then
		write "System-wide bashrc file [${bashrc_file}] for interactive bash(1) shells already updated!"
	else
		local bashrc_file_bak="${bashrc_file}.bak"
		[ -f "${bashrc_file_bak}" ] &&
		{
			write "Bashrc backup file [${bashrc_file_bak}] found, restoring to original state."
			mv "${bashrc_file_bak}" "${bashrc_file}"
		}
	
		# create backup of current bashrc file
		write "Creating backup of [${bashrc_file}] to [${bashrc_file_bak}]"
		cp "${bashrc_file}" "${bashrc_file_bak}"
		
		# add logic to load files from bashrdc.d
		cat >> "${bashrc_file}" <<- "EOF"
		
		# load extra files from bash.bashrc.d
		if [ -d /etc/bash.bashrc.d ]; then
			for i in /etc/bash.bashrc.d/*.sh; do
				if [ -r $i ]; then
					. $i
				fi
			done
			unset i
		fi
		EOF
	fi
}

noninteractive_shell_integration()
{
	# System-wide bash.bashrc file for interactive bash(1) shells.
	local environment_file="/etc/environment"
	h3 "Updating System-wide ${environment_file} file and adding \$BASH_ENV variable for non-interactive bash(1) shells..."
	if grep -q "${SS_LIB}/ssbash" "$environment_file"
	then
		write "System-wide [${environment_file}] file already contains appropriate [\$BASH_ENV] variable for non-interactive bash(1) shells!"
	else
		# check for backup file and restore if it exists.
		local environment_file_bak="${environment_file}.bak"
		[ -f "${environment_file_bak}" ] &&
		{
			write "Environment backup file [${environment_file_bak}] found, restoring to original state."
			mv "${environment_file_bak}" "${environment_file}"
		}
		
		# create backup of current environment file
		write "Creating backup of [${environment_file}] to [${environment_file_bak}]"
		cp "${environment_file}" "${environment_file_bak}"
		
		# add ssbash to environment file
		cat >> "${environment_file}" <<- EOF
			export BASH_ENV="${SS_LIB}/ss-bash"
		EOF
	fi
}

########################################
# Run Script
########################################
echo "Elevating..."
# sudo required to copy files
elevate ${SS_BYPASS_ELEVATE_PROMPT}

h1 "Installing ShaneSpaceOS"
write "Installing and configuring ShanespaceOS system files."
install_libraries
noninteractive_shell_integration
interactive_shell_integration

# TODO: add check for display and error handling
#zenity --info --text="ShaneSpaceOS Tools Installed Successfully.\n- ShaneSpace Bash Extensions"

exit 0
reset
